import { Command, flags } from "@oclif/command";
import { ChangeType } from "../../printer/ast";
interface Change {
    type: ChangeType;
    code: string;
    description: string;
}
export default class SchemaCheck extends Command {
    static description: string;
    static flags: {
        header: flags.IOptionFlag<string[]>;
        endpoint: flags.IOptionFlag<string | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        key: flags.IOptionFlag<string | undefined>;
        engine: flags.IOptionFlag<string | undefined>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        config: flags.IOptionFlag<string | undefined>;
    };
    run(): Promise<void>;
}
export declare const format: (change: Change) => {
    type: string;
    code: string;
    description: string;
};
export {};
